{
  "version": 3,
  "sources": ["../../../../../../../../../src/trigger/product-extractor.ts"],
  "sourcesContent": ["import { logger, task } from \"@trigger.dev/sdk/v3\";\n\n// Defina o tipo de payload para a tarefa\ntype ProductExtractionPayload = {\n  url: string;\n  markdown: string;\n  mode: string;\n};\n\n// Define a task para processar extrações de produtos\nexport const productExtractionTask = task({\n  id: \"product-extraction\",\n  // Máximo de 10 minutos de execução\n  maxDuration: 10 * 60, // em segundos\n  run: async (payload: ProductExtractionPayload) => {\n    const { url, markdown, mode } = payload;\n    \n    logger.log(\"Iniciando a extração de produtos\", { url, mode });\n    \n    try {\n      // Como não podemos importar dinamicamente, precisamos passar o caminho absoluto\n      // para o módulo que contém a função de extração\n      const { extractProductDataWithOpenAI } = require(\"../../../lib/openai-extractor\");\n      \n      // Chamar a função de extração\n      const result = await extractProductDataWithOpenAI(url, markdown, undefined, mode);\n      \n      logger.log(\"Extração concluída com sucesso\", { url });\n      \n      return result;\n    } catch (error: any) {\n      logger.error(\"Erro na extração de produtos\", { \n        error: error.message, \n        url,\n        mode \n      });\n      \n      throw error;\n    }\n  },\n});\n"],
  "mappings": ";;;;;;;;;;AAAA;AAUO,IAAM,wBAAwB,KAAK;AAAA,EACxC,IAAI;AAAA;AAAA,EAEJ,aAAa,KAAK;AAAA;AAAA,EAClB,KAAK,OAAO,YAAsC;AAChD,UAAM,EAAE,KAAK,UAAU,KAAK,IAAI;AAEhC,WAAO,IAAI,oCAAoC,EAAE,KAAK,KAAK,CAAC;AAE5D,QAAI;AAGF,YAAM,EAAE,6BAA6B,IAAI,UAAQ,+BAA+B;AAGhF,YAAM,SAAS,MAAM,6BAA6B,KAAK,UAAU,QAAW,IAAI;AAEhF,aAAO,IAAI,kCAAkC,EAAE,IAAI,CAAC;AAEpD,aAAO;AAAA,IACT,SAAS,OAAY;AACnB,aAAO,MAAM,gCAAgC;AAAA,QAC3C,OAAO,MAAM;AAAA,QACb;AAAA,QACA;AAAA,MACF,CAAC;AAED,YAAM;AAAA,IACR;AAAA,EACF;AACF,CAAC;",
  "names": []
}
